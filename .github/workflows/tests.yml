name: API test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Clone test server repository
        run: git clone https://github.com/Nikita-Filonov/qa-automation-engineer-api-course.git

      - name: Install test server dependencies
        run: pip install -r qa-automation-engineer-api-course/requirements.txt

      - name: Start a test server
        env:
          APP_HOST: "http://localhost:8000"
          DATABASE_URL: "sqlite+aiosqlite:///./local.db"
          JWT_ALGORITHM: "HS256"
          JWT_SECRET_KEY: "qa-automation-engineer-api-course-secret-key"
          JWT_ACCESS_TOKEN_EXPIRE: 1800
          JWT_REFRESH_TOKEN_EXPIRE: 5184000
        run: uvicorn main:app --host 0.0.0.0 --port 8000 --app-dir ./qa-automation-engineer-api-course &

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API tests with pytest and generate Allure results
        run: pytest -m regression --alluredir=allure-results --numprocesses=2

      - name: Restore Coverage history
        uses: actions/cache/restore@v4
        with:
          path: coverage-history.json
          key: coverage-history-${{ github.run_id }}
          restore-keys: |
            coverage-history-

      - name: Generate Coverage report
        run: |
          swagger-coverage-tool save-report

      - name: Cache Coverage history
        if: always()
        uses: actions/cache/save@v4
        with:
          path: coverage-history.json
          key: coverage-history-${{ github.run_id }}

      - name: Upload Coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

      - name: Upload allure-results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  publish-report:
    runs-on: ubuntu-latest
    needs: run-tests
    if: always()

    steps:
      - name: Download allure-results artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Get Allure history
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report with history
        uses: simple-elf/allure-report-action@v1.13
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
